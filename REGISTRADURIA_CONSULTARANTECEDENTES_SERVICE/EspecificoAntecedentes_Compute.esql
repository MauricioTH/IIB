DECLARE ns NAMESPACE 'http://www.example.org/Consultas/';
DECLARE soap NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';


CREATE COMPUTE MODULE EspecificoAntecedentes_REQUEST
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		--Pasar cabeceras de mensaje.
		SET OutputRoot.MQMD 		= InputRoot.MQMD;
		SET OutputRoot.MQRFH2 		= InputRoot.MQRFH2;
		
		--Creacion de los Arrays del objeto entorno
		CREATE FIELD Environment.Variables;
		CREATE FIELD Environment.Variables.Parameters;
		
		--Creacion de los Array del objeto mensaje
		CREATE FIELD OutputRoot.HTTPInputHeader;
		CREATE FIELD OutputRoot.XMLNSC.ns:Consulta;
		
		DECLARE parameters, parametersDate ROW;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE inputRFHRef REFERENCE TO InputRoot.MQRFH2;
		DECLARE envParRef REFERENCE TO envRef.Parameters;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ns:Consulta; 	
		DECLARE outputRef REFERENCE TO OutputRoot.XMLNSC.ns:Consulta;
		
		--Guardar el MWAS antes de enviar el mensaje al endpoint, se restauran los demas arboles creados en fachada (MessageLog y xxxTags)
		SET envRef.MWAS					= inputRFHRef.MWAS;
		SET envRef.MessageLog	 		= inputRFHRef.MessageLog;
		SET envRef.SOAP.ReplyIdentifier = inputRFHRef.SOAP.ReplyIdentifier;
		SET envRef.usr.MQRFH2           =InputRoot.MQRFH2;
		SET envRef.usr.MQMD             =InputRoot.MQMD;
		
		
		
		
		--Referencio el array outputHTTPInRef del objeto Mensaje 
		 DECLARE outputHTTPInRef REFERENCE TO OutputRoot.HTTPInputHeader;
		  
		--Crear el mensaje para enviar al partner
		 SET outputRef.consrioIn.Documetnum                                  =  COALESCE(inputRef.consrioIn.Documetnum, '');
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE EspecificoAntecedentes_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE faultString CHARACTER InputRoot.SOAP.Body.soap:Fault.faultstring;
		
		
		--Copiar mensaje completo para pasarlo al Log
		IF (faultString IS NOT NULL) THEN
			SET OutputRoot.XMLNSC = InputRoot.SOAP.Body;
		ELSE
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		END IF;
		
		--Eliminar cabeceras innecesarias
		SET OutputRoot.XMLNSC = NULL;
		
		CREATE FIELD OutputRoot.MQMD;
		CREATE FIELD OutputRoot.MQRFH2;
		CREATE FIELD OutputRoot.XMLNSC;
		
		--Restaurar los valores MWAS y de MessageLog para la fachada
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE outputRFHRef REFERENCE TO OutputRoot.MQRFH2;
	    DECLARE outputMD REFERENCE TO OutputRoot.MQMD;
		DECLARE outputRef REFERENCE TO OutputRoot.XMLNSC;
		
		--Restaurar los valores MWAS y de MessageLog para la fachada
		SET outputRFHRef.SOAP.ReplyIdentifier  = envRef.SOAP.ReplyIdentifier;
		SET outputMD                           = envRef.usr.MQMD;
		SET outputRFHRef                       = envRef.usr.MQRFH2;
		--TODO Eliminar la referencia de los TAGS a ofuscar del Especifico para que no viajen en el mensaje, a menos que sean iguales referencias en mensaje de fachada
		--SET outputRFHRef.MessageLog.XMLTAGS = NULL;
		
		

--*************************************************Creacion del condicional IF ElSE***********************************************************************************				
		IF (faultString IS NOT NULL) THEN
			DECLARE parameters ROW;
			
            CREATE FIELD outputRef.ns:getCustomerDataResponse.ns:CustomerDataGetRs;
            MOVE outputRef TO outputRef.ns:getCustomerDataResponse.ns:CustomerDataGetRs;
			
			SET parameters.ifxCode      = '300';
			SET parameters.severity     = '';
			SET parameters.description  = '';
			

			SET parameters.initialIfxCode       = parameters.ifxCode;
			SET parameters.additionalStatus     = '-1';
			SET parameters.rqUID                = envRef.MessageLog.RQUID;
			SET parameters.initialErrDesc       = faultString;
			SET parameters.operationName        = outputRFHRef.MWAS.Hdr.Operacion;

			

		ELSE		
			--TODO Realizar las definiciones de los Namespaces con el response de la wsdl de la fachada
			SET outputRef.ns:ConsultaResponse.(XMLNSC.NamespaceDecl)xmlns:"ns" = ns; 
			
			
			--Referencio los campos de respuesta con el response de la wsdl de la fachada
			CREATE FIELD outputRef.ns:ConsultaResponse.consrioOut; 		
			MOVE outputRef TO outputRef.ns:ConsultaResponse.consrioOut; --TODO: ACTUALIZA LA REFERENCIA DE RESPUESTA
            
            --Referencio los campos de respuesta con el response de la wsdl del partner
			DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ns:ConsultaResponse.consrioOut; 

			 
           -->Status
		    SET outputRef =   inputRef;		   
		  
		END IF;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

